#=============================================
## Clear .Rdata
rm(list=ls())
## Packages
pkg.list <-c("ggplot2", "reshape2", "knitr","matrixcalc",
"rootSolve", "Matrix", "kknn", "Metrics", "pracma")
#install.packages(pkg.list)
lapply(pkg.list, require, character.only = TRUE)
knitr::opts_chunk$set(echo = FALSE, fig.align='center')
#=============================================
carDat = read.csv("http://www.rob-mcculloch.org/data/susedcars.csv", header = TRUE)
carDat = carDat[,c("price","mileage", "year")]
kable(head(carDat))
library (kknn)
source("docv.R")
#get variables we want
x1 = cbind(carDat$mileage)
colnames(x1) = c("mileage")
y = carDat$price
#run cross val several times
set.seed(99)
kv = 2:35 #these are the k values (k as in kNN) we will try
cvmean = rep(0,length(kv)) #will keep average rmse here
ndocv = 50 #number of CV splits to try
n=length(y)
cvmat = matrix(0,length(kv),ndocv) #keep results for each split
for(i in 1:ndocv) {
cvtemp = docvknn(x1,y,kv,nfold=5)
cvmean = cvmean + cvtemp
cvmat[,i] = sqrt(cvtemp/n)
}
cvmean = cvmean/ndocv
cvmean = sqrt(cvmean/n)
plot(log(1/kv),cvmean,type="n",ylim=range(cvmat),xlab="k",cex.lab=1.5)
for(i in 1:ndocv) lines(log(1/kv),cvmat[,i],col=i,lty=3) #plot each result
lines(log(1/kv),cvmean,type="b",col="black",lwd=2) #plot average result
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
#get variables we want
x1 = cbind(carDat$mileage)
colnames(x1) = c("mileage")
y = carDat$price
#run cross val several times
set.seed(99)
kv = 2:35 #these are the k values (k as in kNN) we will try
cvmean = rep(0,length(kv)) #will keep average rmse here
ndocv = 10 #number of CV splits to try
n=length(y)
cvmat = matrix(0,length(kv),ndocv) #keep results for each split
for(i in 1:ndocv) {
cvtemp = docvknn(x1,y,kv,nfold=5)
cvmean = cvmean + cvtemp
cvmat[,i] = sqrt(cvtemp/n)
}
cvmean = cvmean/ndocv
cvmean = sqrt(cvmean/n)
plot(log(1/kv),cvmean,type="n",ylim=range(cvmat),xlab="k",cex.lab=1.5)
for(i in 1:ndocv) lines(log(1/kv),cvmat[,i],col=i,lty=3) #plot each result
lines(log(1/kv),cvmean,type="b",col="black",lwd=2) #plot average result
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
#get variables we want
x1 = cbind(carDat$mileage)
colnames(x1) = c("mileage")
y = carDat$price
#run cross val several times
set.seed(99)
kv = 2:50 #these are the k values (k as in kNN) we will try
cvmean = rep(0,length(kv)) #will keep average rmse here
ndocv = 10 #number of CV splits to try
n=length(y)
cvmat = matrix(0,length(kv),ndocv) #keep results for each split
for(i in 1:ndocv) {
cvtemp = docvknn(x1,y,kv,nfold=5)
cvmean = cvmean + cvtemp
cvmat[,i] = sqrt(cvtemp/n)
}
cvmean = cvmean/ndocv
cvmean = sqrt(cvmean/n)
plot(log(1/kv),cvmean,type="n",ylim=range(cvmat),xlab="k",cex.lab=1.5)
for(i in 1:ndocv) lines(log(1/kv),cvmat[,i],col=i,lty=3) #plot each result
lines(log(1/kv),cvmean,type="b",col="black",lwd=2) #plot average result
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
#get variables we want
x1 = cbind(carDat$mileage)
colnames(x1) = c("mileage")
y = carDat$price
#run cross val several times
set.seed(99)
kv = 2:50 #these are the k values (k as in kNN) we will try
cvmean = rep(0,length(kv)) #will keep average rmse here
ndocv = 50 #number of CV splits to try
n=length(y)
cvmat = matrix(0,length(kv),ndocv) #keep results for each split
for(i in 1:ndocv) {
cvtemp = docvknn(x1,y,kv,nfold=5)
cvmean = cvmean + cvtemp
cvmat[,i] = sqrt(cvtemp/n)
}
cvmean = cvmean/ndocv
cvmean = sqrt(cvmean/n)
plot(log(1/kv),cvmean,type="n",ylim=range(cvmat),xlab="k",cex.lab=1.5)
for(i in 1:ndocv) lines(log(1/kv),cvmat[,i],col=i,lty=3) #plot each result
lines(log(1/kv),cvmean,type="b",col="black",lwd=2) #plot average result
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
#get variables we want
x1 = cbind(carDat$mileage)
colnames(x1) = c("mileage")
y = carDat$price
#run cross val several times
set.seed(99)
kv = 2:50 #these are the k values (k as in kNN) we will try
cvmean = rep(0,length(kv)) #will keep average rmse here
ndocv = 100 #number of CV splits to try
n=length(y)
cvmat = matrix(0,length(kv),ndocv) #keep results for each split
for(i in 1:ndocv) {
cvtemp = docvknn(x1,y,kv,nfold=5)
cvmean = cvmean + cvtemp
cvmat[,i] = sqrt(cvtemp/n)
}
cvmean = cvmean/ndocv
cvmean = sqrt(cvmean/n)
plot(log(1/kv),cvmean,type="n",ylim=range(cvmat),xlab="k",cex.lab=1.5)
for(i in 1:ndocv) lines(log(1/kv),cvmat[,i],col=i,lty=3) #plot each result
lines(log(1/kv),cvmean,type="b",col="black",lwd=2) #plot average result
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
#get variables we want
x1 = cbind(carDat$mileage)
colnames(x1) = c("mileage")
y = carDat$price
#run cross val several times
set.seed(99)
kv = 2:50 #these are the k values (k as in kNN) we will try
cvmean = rep(0,length(kv)) #will keep average rmse here
ndocv = 300 #number of CV splits to try
n=length(y)
cvmat = matrix(0,length(kv),ndocv) #keep results for each split
for(i in 1:ndocv) {
cvtemp = docvknn(x1,y,kv,nfold=5)
cvmean = cvmean + cvtemp
cvmat[,i] = sqrt(cvtemp/n)
}
cvmean = cvmean/ndocv
cvmean = sqrt(cvmean/n)
plot(log(1/kv),cvmean,type="n",ylim=range(cvmat),xlab="k",cex.lab=1.5)
for(i in 1:ndocv) lines(log(1/kv),cvmat[,i],col=i,lty=3) #plot each result
lines(log(1/kv),cvmean,type="b",col="black",lwd=2) #plot average result
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
#get variables we want
x1 = cbind(carDat$mileage)
colnames(x1) = c("mileage")
y = carDat$price
#run cross val several times
set.seed(99)
kv = 2:50 #these are the k values (k as in kNN) we will try
cvmean = rep(0,length(kv)) #will keep average rmse here
ndocv = 50 #number of CV splits to try
n=length(y)
cvmat = matrix(0,length(kv),ndocv) #keep results for each split
for(i in 1:ndocv) {
cvtemp = docvknn(x1,y,kv,nfold=5)
cvmean = cvmean + cvtemp
cvmat[,i] = sqrt(cvtemp/n)
}
cvmean = cvmean/ndocv
cvmean = sqrt(cvmean/n)
plot(log(1/kv),cvmean,type="n",ylim=range(cvmat),xlab="k",cex.lab=1.5)
for(i in 1:ndocv) lines(log(1/kv),cvmat[,i],col=i,lty=3) #plot each result
lines(log(1/kv),cvmean,type="b",col="black",lwd=2) #plot average result
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
plot(x1, y, xlab ="mileage", ylab ="price")
kfbest = kknn(y~x1,data.frame(x1, y),data.frame(x1=sort(x1)), k=kbest,kernel = "rectangular")
lines(sort(x1),kfbest$fitted,col="red",lwd=2,cex.lab=2)
kfeyeball = kknn(y~x1,data.frame(x1, y),data.frame(x1=sort(x1)), k=40, kernel = "rectangular")
lines(sort(x1),kfeyeball$fitted,col="blue",lwd=2,cex.lab=2)
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
a = rmse(y, kfbest$fitted)
#b = rmse(testCar2$price, testCar2$knnFit40)
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
a = rmse(y, kfbest$fitted)
#b = rmse(testCar2$price, testCar2$knnFit40)
a
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
a = rmse(y, kfbest$fitted)
b = rmse(y, kfeyeball$fitted)
a
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
a = rmse(y, kfbest$fitted)
b = rmse(y, kfeyeball$fitted)
a b
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
a = rmse(y, kfbest$fitted)
b = rmse(y, kfeyeball$fitted)
a
b
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
plot(x1, y, xlab ="mileage", ylab ="price")
kfbest = kknn(y~x1,data.frame(x1, y),data.frame(x1=sort(x1)), k=kbest,kernel = "rectangular")
lines(sort(x1),kfbest$fitted,col="red",lwd=2,cex.lab=2)
kfeyeball = kknn(y~x1,data.frame(x1, y),data.frame(x1=sort(x1)), k=40, kernel = "rectangular")
lines(sort(x1),kfeyeball$fitted,col="blue",lwd=2,cex.lab=2)
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
a = rmse(y, kfbest$fitted)
b = rmse(y, kfeyeball$fitted)
a
b
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
a = rmse(y, kfbest$fitted)
b = rmse(y, kfeyeball$fitted)
kable(data.frame(crossval = a,  eyeball= b), caption = "RMSEs")
near = kknn(y~x1,data.frame(x1, y),data.frame(x1=100000),k=5,kernel = "rectangular")
cat("knn predicted value: ",near$fitted,"\n")
plot(x1, y, xlab ="mileage", ylab ="price")
kfbest = kknn(y~x1,data.frame(x1, y),data.frame(x1=sort(x1)), k=kbest,kernel = "rectangular")
lines(sort(x1),kfbest$fitted,col="red",lwd=2,cex.lab=2)
kfeyeball = kknn(y~x1,data.frame(x1, y),data.frame(x1=sort(x1)), k=40, kernel = "rectangular")
lines(sort(x1),kfeyeball$fitted,col="blue",lwd=2,cex.lab=2)
#get variables we want
x2 = cbind(carDat$mileage, carDat$year)
colnames(x2) = c("mileage","year")
mmsc=function(x) {return((x-min(x))/(max(x)-min(x)))}
xs = apply(x2,2,mmsc) #apply scaling function to each column of x
#plot y vs each x
par(mfrow=c(1,2)) #two plot frames
plot(x2[,1],y,xlab="mileage",ylab="price")
plot(x2[,2],y,xlab="year",ylab="price")
#run cross val several times
set.seed(99)
kv = 2:35 #these are the k values (k as in kNN) we will try
cvmean = rep(0,length(kv)) #will keep average rmse here
ndocv = 50 #number of CV splits to try
n=length(y)
cvmat = matrix(0,length(kv),ndocv) #keep results for each split
for(i in 1:ndocv) {
cvtemp = docvknn(xs,y,kv,nfold=5)
cvmean = cvmean + cvtemp
cvmat[,i] = sqrt(cvtemp/n)
}
cvmean = cvmean/ndocv
cvmean = sqrt(cvmean/n)
plot(log(1/kv),cvmean,type="n",ylim=range(cvmat),xlab="k",cex.lab=1.5)
for(i in 1:ndocv) lines(log(1/kv),cvmat[,i],col=i,lty=3) #plot each result
lines(log(1/kv),cvmean,type="b",col="black",lwd=2) #plot average result
kbest = kv[which.min(cvmean)]
cat("the best k is: ",kbest,"\n")
#refit using all the data and k=5
ddf = data.frame(y,xs)
near2 = kknn(y~.,ddf,ddf,k=kbest,kernel = "rectangular")
lmf = lm(y~.,ddf)
fmat = cbind(y,near2$fitted,lmf$fitted)
colnames(fmat)=c("y","kNN","linear")
pairs(fmat)
print(cor(fmat))
#refit using all the data and k=5
ddf = data.frame(y,xs)
near2 = kknn(y~.,ddf,ddf,k=kbest,kernel = "rectangular")
lmf = lm(y~.,ddf)
fmat = cbind(y,near2$fitted,lmf$fitted)
colnames(fmat)=c("y","kNN","linear")
pairs(fmat)
print(cor(fmat))
#predict price of cars with year = 2008 and mileage = 75,000.
x21=75000; x22=2008
x21s = (x21-min(x2[,1]))/(max(x2[,1])-min(x2[,1]))
x22s = (x22-min(x2[,2]))/(max(x2[,2])-min(x2[,2]))
near = kknn(y~.,ddf,data.frame(mileage=x21s, year=x22s),k=kbest,kernel = "rectangular")
cat("knn predicted value: ",near$fitted,"\n")
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
c = rmse(y, kfbest$fitted)
d = rmse(y, near2$fitted)
kable(data.frame(mileage = c,  mileage&year= d), caption = "RMSEs")
rmse = function(y,yhat) {return(sqrt(mean((y-yhat)^2)))}
c = rmse(y, kfbest$fitted)
d = rmse(y, near2$fitted)
kable(data.frame(mileage = c,  mileage_year= d), caption = "RMSEs")
#refit using all the data and k=5
ddf = data.frame(y,xs)
near2 = kknn(y~.,ddf,ddf,k=kbest,kernel = "rectangular")
lmf = lm(y~.,ddf)
fmat = cbind(y,near2$fitted,lmf$fitted)
colnames(fmat)=c("y","kNN","linear")
pairs(fmat)
print(cor(fmat))
