stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=20
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=5
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
n <- nrow(ddf)
##do forwards stepAIC, stopping when adding any var makes BIC bigger.
lmtran =lm(y~.,ddf)
bictran = extractAIC(lmtran,k=log(n))
print(summary(lmtran))
bictran
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=25
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=2
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=5
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=6
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=3
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=5
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=5
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
n <- nrow(ddf)
##do forwards stepAIC, stopping when adding any var makes BIC bigger.
lmtran =lm(y~.,ddf)
#bictran = extractAIC(lmtran,k=log(n))
#print(summary(lmtran))
#bictran
fwd = stepAIC(nullmod,scope=formula(lmtran),direction="forward",k=log(n),trace=0)
source("do-stepcv.R")
n <- nrow(ddf)
##do forwards stepAIC, stopping when adding any var makes BIC bigger.
nullmod = lm(y~1,ddf)
lmtran =lm(y~.,ddf)
#bictran = extractAIC(lmtran,k=log(n))
#print(summary(lmtran))
#bictran
fwd = stepAIC(nullmod,scope=formula(lmtran),direction="forward",k=log(n),trace=0)
print(summary(fwd))
bicfwd = extractAIC(fwd,k=log(n))
cat("bic for forward model is: ",bicfwd,"\n")
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=5
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep=7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep = 9
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep = 8
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
#nstep = 8
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep = 100
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep = 100
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
size(folds)
dim(folds)
length(folds)
unique(folds)
ncol(ddf)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(99)
folds = getfolds(5,nrow(ddf))
nstep = 1000
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 1000
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 8
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 5
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
View(ddf)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 3
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 9
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
n <- nrow(ddf)
##do forwards stepAIC, stopping when adding any var makes BIC bigger.
nullmod = lm(y~1,ddf)
lmtran =lm(y~.,ddf)
#bictran = extractAIC(lmtran,k=log(n))
#print(summary(lmtran))
#bictran
fwd = stepAIC(nullmod,scope=formula(lmtran),direction="forward",k=log(n),trace=0)
print(summary(fwd))
bicfwd = extractAIC(fwd,k=log(n))
cat("bic for forward model is: ",bicfwd,"\n")
source("do-stepcv.R")
n <- nrow(ddf)
##do forwards stepAIC, stopping when adding any var makes BIC bigger.
nullmod = lm(price~1,ddf)
lmtran =lm(price~.,ddf)
#bictran = extractAIC(lmtran,k=log(n))
#print(summary(lmtran))
#bictran
fwd = stepAIC(nullmod,scope=formula(lmtran),direction="forward",k=log(n),trace=0)
print(summary(fwd))
bicfwd = extractAIC(fwd,k=log(n))
cat("bic for forward model is: ",bicfwd,"\n")
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 9
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(10,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
n <- nrow(ddf)
##do forwards stepAIC, stopping when adding any var makes BIC bigger.
nullmod = lm(price~1,ddf) #null model, no variables
lmtran =lm(price~.,ddf) #full model
#bictran = extractAIC(lmtran,k=log(n))
#print(summary(lmtran))
#bictran
fwd = stepAIC(nullmod,scope=formula(lmtran),direction="forward",k=log(n),trace=0)
print(summary(fwd))
bicfwd = extractAIC(fwd,k=log(n))
cat("bic for forward model is: ",bicfwd,"\n")
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 9
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 5
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
ssemat
stepcv
stcv
matrix(0,8,1)
matrix(0,8,2)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
View(stcv)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
View(stcv)
rm(stepcv)
source("do-stepcv.R")
n <- nrow(ddf)
##do forwards stepAIC, stopping when adding any var makes BIC bigger.
nullmod = lm(price~1,ddf) #null model, no variables
lmtran =lm(price~.,ddf) #full model
#bictran = extractAIC(lmtran,k=log(n))
#print(summary(lmtran))
#bictran
fwd = stepAIC(nullmod,scope=formula(lmtran),direction="forward",k=log(n),trace=0)
print(summary(fwd))
bicfwd = extractAIC(fwd,k=log(n))
cat("bic for forward model is: ",bicfwd,"\n")
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rm(stcv)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 10
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 9
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 3
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
source("do-stepcv.R")
yind=1
xind=2:ncol(ddf)
set.seed(199)
folds = getfolds(5,nrow(ddf))
nstep = 7
stcv = stepcv(ddf,yind,xind,formula(lmtran),folds,nstep)
rmse=sqrt(apply(stcv,1,sum)/n)
plot(0:nstep,rmse,xlab="num var",ylab="RMSE",
cex.lab=1.5,cex.axis=1.5,type="b",col="red",pch=16)
